{"version":3,"sources":["pages/HomePage.js","images/error-404.jpg","pages/PageNotFound404.js","pages/AboutPage.js","data/articles.js","components/ArticleList.js","pages/ArticleListPage.js","components/CommentsList.js","components/UpvoteSection.js","components/AddCommentForm.js","pages/ArticlePage.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","Fragment","PageNotFound404","src","image404","alt","AboutPage","articles","name","title","content","ArticleList","props","articleLinkList","map","article","className","to","substring","trim","ArticleListPage","CommentsList","comments","comment","key","userName","commentText","UpvoteSection","articleName","upvote","setArticleInfo","upvoteFunction","a","console","log","requestOptions","method","fetch","result","json","body","id","onClick","AddCommentForm","useState","username","setUsername","setCommentText","addComment","JSON","stringify","headers","type","value","onChange","event","target","rows","cols","ArticlePage","mypaths","useParams","path","articleInfo","useEffect","mode","cache","fetchData","resultArticle","find","otherArticles","filter","paragraph","Navbar","App","element","exact","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.17d60ab6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>Welcome to the Blog</h1>\r\n      <p>\r\n        It's not only writers who can benefit from this free online tool. If\r\n        you're a programmer who's working on a project where blocks of text are\r\n        needed, this tool can be a great way to get that. It's a good way to\r\n        test your programming and that the tool being created is working well.\r\n        Above are a few examples of how the random paragraph generator can be\r\n        beneficial. The best way to see if this random paragraph picker will be\r\n        useful for your intended purposes is to give it a try. Generate a number\r\n        of paragraphs to see if they are beneficial to your current project. If\r\n        you do find this paragraph tool useful, please do us a favor and let us\r\n        know how you're using it.\r\n      </p>\r\n      <p>\r\n        It's greatly beneficial for us to know the different ways this tool is\r\n        being used so we can improve it with updates. This is especially true\r\n        since there are times when the generators we create get used in\r\n        completely unanticipated ways from when we initially created them. If\r\n        you have the time, please send us a quick note on what you'd like to see\r\n        changed or added to make it better in the future.\r\n      </p>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default HomePage;\r\n","export default __webpack_public_path__ + \"static/media/error-404.0b5ef05b.jpg\";","import React from \"react\";\r\nimport image404 from \"../images/error-404.jpg\";\r\n\r\nconst PageNotFound404 = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <img src={image404} alt=\"page not found!\"></img>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default PageNotFound404;\r\n","import React from \"react\";\r\n\r\nconst AboutPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About Me</h1>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default AboutPage;\r\n","const articles = [\r\n  {\r\n    name: \"learn-react\",\r\n    title: \"The Fastest Way to Learn React\",\r\n    content: [\r\n      `Welcome! Today we're going to be talking about the fastest way to\r\n            learn React. We'll be discussing some topics such as proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n      `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n      `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n    ],\r\n  },\r\n  {\r\n    name: \"learn-node\",\r\n    title: \"How to Build a Node Server in 10 Minutes\",\r\n    content: [\r\n      `In this article, we're going to be talking looking at a very quick way\r\n            to set up a Node.js server. We'll be discussing some topics such as proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n      `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n      `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n    ],\r\n  },\r\n  {\r\n    name: \"my-thoughts-on-resumes\",\r\n    title: \"My Thoughts on Resumes\",\r\n    content: [\r\n      `Today is the day I talk about something which scares most people: resumes.\r\n            In reality, I'm not sure why people have such a hard time with proin congue\r\n            ligula id risus posuere, vel eleifend ex egestas. Sed in turpis leo. \r\n            Aliquam malesuada in massa tincidunt egestas. Nam consectetur varius turpis, \r\n            non porta arcu porttitor non. In tincidunt vulputate nulla quis egestas. Ut \r\n            eleifend ut ipsum non fringilla. Praesent imperdiet nulla nec est luctus, at \r\n            sodales purus euismod.`,\r\n      `Donec vel mauris lectus. Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n      `Etiam nec lectus urna. Sed sodales ultrices dapibus. \r\n            Nam blandit tristique risus, eget accumsan nisl interdum eu. Aenean ac accumsan \r\n            nisi. Nunc vel pulvinar diam. Nam eleifend egestas viverra. Donec finibus lectus \r\n            sed lorem ultricies, eget ornare leo luctus. Morbi vehicula, nulla eu tempor \r\n            interdum, nibh elit congue tellus, ac vulputate urna lorem nec nisi. Morbi id \r\n            consequat quam. Vivamus accumsan dui in facilisis aliquet.`,\r\n    ],\r\n  },\r\n];\r\n\r\nexport default articles;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../App.css\";\r\n\r\n//This is reusable component\r\nconst ArticleList = (props) => {\r\n  let articleLinkList = props.articles.map((article) => {\r\n    return (\r\n      <li>\r\n        <Link className=\"article-list-item\" to={`/article/${article.name}`}>\r\n          <h3>{article.title}</h3>\r\n          <p>{article.content[0].substring(0, 150).trim()}...</p>\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  <ul> {articleLinkList}</ul>;\r\n\r\n  return <ul>{articleLinkList}</ul>;\r\n};\r\n\r\nexport default ArticleList;\r\n","import React from \"react\";\r\nimport articles from \"../data/articles.js\";\r\nimport \"../App.css\";\r\nimport ArticleList from \"../components/ArticleList.js\";\r\n\r\n//when we wants to use js inside a component\r\n// use `` to do it\r\nconst ArticleListPage = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>Articles</h1>\r\n      <ArticleList articles={articles}></ArticleList>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default ArticleListPage;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst CommentsList = (props) => {\r\n  let comments = props.comments.map((comment, key) => {\r\n    return (\r\n      <div className=\"comment\" key={key}>\r\n        <h4>{comment.userName}</h4>\r\n        <p>{comment.commentText}</p>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h3>Comments:</h3>\r\n      {comments}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CommentsList;\r\n","import React from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst UpvoteSection = ({ articleName, upvote, setArticleInfo }) => {\r\n  const upvoteFunction = async () => {\r\n    console.log(\"upvote article \", articleName);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n    };\r\n    /**const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ title: 'React POST Request Example' })\r\n        };\r\n        fetch('https://reqres.in/api/posts', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ postId: data.id })); */\r\n    const result = await fetch(\r\n      `/api/articles-withdb-common/${articleName}/upvote`,\r\n      requestOptions\r\n    );\r\n    const body = await result.json();\r\n    setArticleInfo(body);\r\n  };\r\n  return (\r\n    <div id=\"upvotes-section\">\r\n      <button onClick={() => upvoteFunction()}>Add vote</button>\r\n      <p>This post has been upvoted {upvote} times</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpvoteSection;\r\n","import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst AddCommentForm = ({ articleName, setArticleInfo }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [commentText, setCommentText] = useState(\"\");\r\n\r\n  const addComment = async () => {\r\n    const result = await fetch(`/api/articles/${articleName}/add-comment`, {\r\n      method: \"post\",\r\n      body: JSON.stringify({ userName: username, commentText: commentText }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const body = await result.json();\r\n    setArticleInfo(body);\r\n    setUsername(\"\");\r\n    setCommentText(\"\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"add-comment-form\">\r\n      <h3>Add a Comment</h3>\r\n      <label>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(event) => setUsername(event.target.value)}\r\n        />\r\n      </label>\r\n      <label>\r\n        Comment:\r\n        <textarea\r\n          rows=\"4\"\r\n          cols=\"50\"\r\n          value={commentText}\r\n          onChange={(event) => setCommentText(event.target.value)}\r\n        />\r\n      </label>\r\n      <button onClick={() => addComment()}>Add Comment</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ArticleList from \"../components/ArticleList.js\";\r\nimport CommentsList from \"../components/CommentsList.js\";\r\nimport UpvoteSection from \"../components/UpvoteSection.js\";\r\nimport AddCommentForm from \"../components/AddCommentForm.js\";\r\nimport articles from \"../data/articles.js\";\r\n\r\n//match parameter will be capture all path variable details\r\nconst ArticlePage = () => {\r\n  //This is the path array\r\n  let mypaths = useParams();\r\n  console.log(mypaths);\r\n\r\n  //Selecting the firsth path string from array\r\n  let { path } = useParams();\r\n\r\n  //to fetch data from node server we use fetch and hooks useState\r\n  /**This means we useState\r\n   * articleInfo to keep article data after we called to server\r\n   * setArticleInfo to change the state of articleInfo\r\n   * default value (initial value) of articleInfo { upvote: 0, comments: [] } object\r\n   */\r\n  const [articleInfo, setArticleInfo] = useState({ upvote: 0, comments: [] });\r\n\r\n  //to make some event changes to and make articleInfo populate we use useEffect\r\n  /**This is to maintain all side effects fetching data and display\r\n   * the arrayList after the function are the values to be changed in order to\r\n   * execute the useEffect, if we leave it empty it will call only one time when the page loads.\r\n   * To make the CORS error update package.json with proxy\r\n   */\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const requestOptions = {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n      };\r\n      /**const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ title: 'React POST Request Example' })\r\n    };\r\n    fetch('https://reqres.in/api/posts', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => this.setState({ postId: data.id })); */\r\n      const result = await fetch(\r\n        `/api/articles-mongodb-onfly/${path}`,\r\n        requestOptions\r\n      );\r\n      console.log(\"result\", result);\r\n      const body = await result.json();\r\n      console.log(body);\r\n      setArticleInfo(body);\r\n    };\r\n    fetchData();\r\n  }, [path]);\r\n\r\n  const resultArticle = articles.find((article) => article.name === path);\r\n\r\n  if (!resultArticle) return <h1>Article does not exist!</h1>;\r\n\r\n  const otherArticles = articles.filter((article) => article.name !== path);\r\n\r\n  return (\r\n    <>\r\n      <h1>{resultArticle.title}</h1>\r\n\r\n      <UpvoteSection\r\n        articleName={path}\r\n        upvote={articleInfo.upvote}\r\n        setArticleInfo={setArticleInfo}\r\n      ></UpvoteSection>\r\n\r\n      {resultArticle.content.map((paragraph, key) => (\r\n        <p key={key}>{paragraph}</p>\r\n      ))}\r\n\r\n      <AddCommentForm\r\n        articleName={path}\r\n        setArticleInfo={setArticleInfo}\r\n      ></AddCommentForm>\r\n      <CommentsList comments={articleInfo.comments}></CommentsList>\r\n\r\n      <h4>Other Articles</h4>\r\n      <ArticleList articles={otherArticles}></ArticleList>\r\n    </>\r\n  );\r\n};\r\nexport default ArticlePage;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"nav-bar\">\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/article-list\">Articles</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport HomePage from \"./pages/HomePage.js\";\r\nimport PageNotFound404 from \"./pages/PageNotFound404.js\";\r\nimport AboutPage from \"./pages/AboutPage.js\";\r\nimport ArticleListPage from \"./pages/ArticleListPage.js\";\r\nimport ArticlePage from \"./pages/ArticlePage.js\";\r\n\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nimport Navbar from \"./Navbar.js\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <div id=\"page-body\">\r\n            <Routes>\r\n              <Route path=\"/\" element={<HomePage />} exact />\r\n              <Route path=\"/about\" element={<AboutPage />} />\r\n              <Route path=\"/article-list\" element={<ArticleListPage />} />\r\n              <Route path=\"/article/:path\" element={<ArticlePage />} />\r\n              <Route path=\"/*\" element={<PageNotFound404 />} />\r\n            </Routes>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import \"whatwg-fetch\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}